/* Root tokens */
:root{
  --purple:#B993D6; --orange:#f08000; --teal:#58B09C; --ink-900:#14080E; --ink-700:#2b2231; --ink-800:#1d1620; --ink-600:#49475B;
}

/* Background: subtle dark gradient with low-noise feel */
.bg-gradient-dark{
  background: radial-gradient(1200px 600px at 10% 0%, rgba(185,147,214,.18), transparent 55%),
              radial-gradient(900px 500px at 90% 10%, rgba(88,176,156,.18), transparent 60%),
              linear-gradient(180deg, var(--ink-900), #0d0a10 65%);
  min-height:100vh;
}

/* Utility borders */
.border-ink-700{border-color:var(--ink-700)!important}
.border-ink-800{border-color:var(--ink-800)!important}
.font-purple{color:var(--purple)!important}
.font-orange{color:var(--orange)!important}
/* Glass card */
.card-glass{background:rgba(255,255,255,.06); border:1px solid rgba(255,255,255,.08); backdrop-filter: blur(14px);}
.backdrop-blur{backdrop-filter:saturate(120%) blur(10px)}

/* Segmented control focus */
.btn-check:focus + .btn,
.btn:focus {
  outline: 2px solid rgba(88,176,156,.35);
  outline-offset: 1px;
}
/* High-contrast outline button for light surfaces */
.btn-outline-ink {
  --bs-btn-color: var(--ink-600);
  --bs-btn-border-color: var(--ink-600);
  --bs-btn-hover-bg: var(--ink-600);
  --bs-btn-hover-color: #fff;
  --bs-btn-hover-border-color: var(--ink-600);
  --bs-btn-active-bg: var(--ink-600);
  --bs-btn-active-color: #fff;
  --bs-btn-active-border-color: var(--ink-600);
}

/* Dropzone subtle hover */
#image-dropzone { transition: border-color .2s ease, background-color .2s ease; }
#image-dropzone:hover { background-color: rgba(255,255,255,.03); }

/* Use the form partial inside a page without its own header/footer */
.special-form-embedded .card-header,
.special-form-embedded .card-footer {
  display: none !important;
}

/* Gradient text for hero */
.gradient-text{
  background: linear-gradient(90deg, var(--purple), var(--teal));
  -webkit-background-clip:text; background-clip:text; color:transparent;
}

/* Buttons with brand pops */
.btn-orange{ --bs-btn-bg:var(--orange); --bs-btn-border-color:var(--orange); --bs-btn-hover-bg:#ff9122; --bs-btn-hover-border-color:#ff9122; --bs-btn-color:#14080E; }
.btn-teal{ --bs-btn-bg:var(--teal); --bs-btn-border-color:var(--teal); --bs-btn-hover-bg:#69c6af; --bs-btn-hover-border-color:#69c6af; --bs-btn-color:#14080E; }
.btn-purple{ --bs-btn-bg:var(--purple); --bs-btn-border-color:var(--purple); --bs-btn-hover-bg:#c7a5e1; --bs-btn-hover-border-color:#c7a5e1; --bs-btn-color:#14080E; }

/* Feature cards */
.feature-card{background:rgba(255,255,255,.04); border:1px solid rgba(255,255,255,.07);} 
.icon-dot{width:12px;height:12px;border-radius:50%}
.bg-purple{background:var(--purple)!important}
.bg-teal{background:var(--teal)!important}
.bg-orange{background:var(--orange)!important}

.form-check-input:checked{
  background-color: var(--teal);
  border-color: var(--teal);
}
/* Widget frame */
.widget-frame{background:rgba(255,255,255,.04); border:1px solid rgba(255,255,255,.08)}

/* Simple helpers */
.object-cover{object-fit:cover}
.fw-extrabold{font-weight: 800}
.py-6{padding-top:4.5rem!important;padding-bottom:4.5rem!important}
.pb-6{padding-bottom:4.5rem!important}

/* Animations (reduced-motion safe) */
@media (prefers-reduced-motion:no-preference){
  [data-animate="reveal"]{opacity:0; transform:translateY(12px); transition:opacity .6s ease, transform .6s ease}
  [data-animate="lift"]{opacity:0; transform:translateY(8px); transition:opacity .6s ease, transform .6s ease}
  [data-animate="pop"]{transform:translateY(0)}
  [data-animate="float"]{opacity:0; transform:translateY(10px)}
.inview{opacity:1!important; transform:none!important}
}

/* Active specials */
.special-live{box-shadow:0 0 0 2px var(--teal),0 0 8px var(--teal);}


/* ================================ */
/* /static/js/appertivo.js          */
/* ================================ */
// Vanilla JS: intersection observers, counters, and minor UX niceties.
(function(){
  // Guard reduced motion
  const prefersReduced = window.matchMedia('(prefers-reduced-motion: reduce)').matches;

  // Reveal on scroll
  if(!prefersReduced){
    const io = new IntersectionObserver((entries)=>{
      for(const e of entries){ if(e.isIntersecting){ e.target.classList.add('inview'); io.unobserve(e.target); } }
    },{threshold:0.15});
    document.querySelectorAll('[data-animate]')?.forEach(el=>io.observe(el));
  }

  // Description counter (delegated; works after HTMX swaps)
  function bindCounters(root){
    const desc = root.querySelector('#id_description');
    const out = root.querySelector('#desc-count');
    if(desc && out){
      const update=()=>{ out.textContent = (desc.value||'').length; };
      desc.addEventListener('input', update); update();
    }
  }
  bindCounters(document);

  // Rebind behaviors after HTMX swaps
  document.body.addEventListener('htmx:afterSwap', (ev)=>{
    bindCounters(ev.target || document);
    // Re-attach observers for any new nodes
    if(!prefersReduced){
      document.querySelectorAll('[data-animate]:not(.inview)')?.forEach(el=>{
        el.style.willChange = 'opacity, transform';
      });
    }
  });

  // Minor button press pop (accessible, non-essential)
  document.addEventListener('click', (e)=>{
    const b = e.target.closest('.btn');
    if(!b) return; b.animate([{transform:'translateY(0)'},{transform:'translateY(1px)'},{transform:'translateY(0)'}],{duration:120});
  });
})();
