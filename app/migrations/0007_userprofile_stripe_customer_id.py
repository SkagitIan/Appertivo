# Generated by Django 4.1.5 on 2025-08-26 22:28

from django.db import migrations, models


def copy_customer_ids(apps, schema_editor):
    UserProfile = apps.get_model("app", "UserProfile")
    Subscription = apps.get_model("app", "Subscription")
    for sub in Subscription.objects.exclude(stripe_customer_id__isnull=True).exclude(stripe_customer_id=""):
        try:
            profile = UserProfile.objects.get(user=sub.user)
        except UserProfile.DoesNotExist:
            continue
        profile.stripe_customer_id = sub.stripe_customer_id
        profile.save(update_fields=["stripe_customer_id"])


def reverse_copy_customer_ids(apps, schema_editor):
    UserProfile = apps.get_model("app", "UserProfile")
    Subscription = apps.get_model("app", "Subscription")
    for profile in UserProfile.objects.exclude(stripe_customer_id__isnull=True).exclude(stripe_customer_id=""):
        Subscription.objects.filter(user=profile.user).update(
            stripe_customer_id=profile.stripe_customer_id
        )


class Migration(migrations.Migration):

    dependencies = [
        ("app", "0006_subscription_stripe_customer_id"),
    ]

    operations = [
        migrations.AddField(
            model_name="userprofile",
            name="stripe_customer_id",
            field=models.CharField(blank=True, max_length=64, null=True),
        ),
        migrations.RunPython(copy_customer_ids, reverse_copy_customer_ids),
    ]
